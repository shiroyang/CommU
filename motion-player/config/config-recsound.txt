# audio output configuration
# fsync -> socket for sending audio data to remote ATRASR
# wav -> socket for sending audio data to a remote player
# wav16
# raw -> socket for sending audio data to a remote player ?
# array -> socket for sending array data to soundloc
# textwav
[output format]
no
wav
wav80
julius
wav16
no
[output host]
nikola-array
no
10.186.42.51
no
localhost
[output port]
4002
4003
12345
4000
1234
[output channels]
1
2
1
[output active segment]
0
1

[output2 format]
no
wav16
no
[output2 host]
no
[output2 port]
2234
#[output2 channels]
2
#[output2 active segment]
0


# audio input configuration
# fsync -> socket for receiving audio data from a remote capture client (ATRASR format)
# julius -> socket for receiving audio data from a remote capture server (Julius format)
# mic -> capture audio data from local device (mic)
# wav16 -> socket for receiving audio data from audio tracker (WAV16 format)
[input format]
mic
array
wav80
mic
array
[input host]
172.27.174.162
192.168.2.111
localhost
192.168.1.4
no
[input port]
7998
12345
7996
1234

# number of input channels: 2 for stereo!
[input channels]
1
2
6
1
8
1

# capture/player device type
# 0 = MME
# 1 = ASIO
[input device type]
0
1
0
# 0: let's note stereo micの場合、mono inputでは、2-channelアレイ処理を行った信号がキャプチャされる？ (capture + player latency = 208ms)
# 1: let's note stereo micの場合、left mic から各チャンネルのraw signalがキャプチャされる。(capture + player latency = 10ms?)


# capture/player frame size (in samples)
[capture frame size]
64
1 (may not work for linux!)
64 (4ms for 16000Hz) default
128 (8ms for 16000Hz)
147 (3.333ms for 44100Hz)
# pci device: packet miss (128 samples)
# sanwa: ok (64/128 samples) (feedback latency 19ms)
# sanwa mic, letsnote phone: (feedback latency 13ms)

# only for ASIO device input (starting from 0) (negative values -> 1 ?)
# sanwa supply capture: channels 2,3 even if it is mono input
[input channel selector]
1,2,3,4,5,6
1,2,3,4,5,6,7,8
0
1
1,17
0

# capture device id (when [input device format] is set to "mic")
# -1 -> use windows default device
# set -1 if ASIO device is selected
[input device]
-1

# input sampling frequency [Hz]
# set 16000 for RASP
# sanwa: 128 -> 17ms
# airpods: 256-> 190ms
[input sampfreq]
16000
44100
48000

# input gain ( > 0 )
[input gain]
1
0.3
1
16

# input delay [ms] 
# capture/transmission latencies, for synchronizing with other channels
[input delay]
0

# 0 -> anti-target (do not sum signal to outpu signal, but suppress input signal from other channels
# 1 -> target (sum input signal to output signal, and suppress input signal from other channels)
[input target]
0
1
0
-1
1
0
-1

# --- input player configuration
# 1 -> play received input signal
[input player]
0
1
0

#[capture player]
#1

[input player device]
-1

# 40 for local audio server
# 100 for remote wired audio server
# -1 asynchronous player: play in sequence if there is new received data
[input player delay]
40
100
160
100
-1
[input player balance]
0
[input player gain]
1
0.5

# 1:mono 2:stereo
[input player mode]
2

# 0 for offline
# 1 for online??
[input asynchronous]
0
1

# --- echo canceller configuration (right channel)
[echo canceller]
0
1
[echo gain balance]
1
3
[echo delay balance]
0
[noise suppression gain]
10


# --- motion output configuration
# robovie -> socket for sending head motion control parameters to a remote robot (robovie)
# android -> socket for sending lip motion control parameters to a remote android 101 (HI1), 102 (F)
# telenoid -> socket for sending lip motion control parameters to a remote telenoid 103
# iwai -> socket for sending lip motion control parameters to a remote telenoid server using iwai's protocol
# f0 -> socket for sending f0 and power to a remote motion generator
# layer2 -> send prosodic and motion control parameters to a remote layer2 client
[motion format]
commu3
command
nikola
no
commu2
nikola
[motion host]
10.229.53.137
192.168.1.1
172.27.183.52
kumadalab
commu-ms03
172.27.174.51
nikola-array
nikola-control
localhost
172.27.174.165
localhost
no
[motion port]
1234
8078
12002
12000
10000
[motion delay]
80

[motion input format]
commu
no
[motion input host]
no
localhost
[motion input port]
8078
10000

[prosody format]
no
layer2
[prosody host]
localhost
[prosody port]
6000


# 0 -> don't send idle motion
# 1 -> send eye blinking idle motion
[send idle motion]
1
[send head motion]
1
[send torso motion]
1
[send read head motion]
0
1
[send read torso motion]
0
1
[send hand motion]
1

# start time synchronization control
# sync -> socket for receiving start/stop recording commands from a remote controller
# no -> no synchronization
[controller format]
no
[controller host]
localhost
[controller port]
20101

# face motion input configuration
# iwai -> socket for receiving face parameters from, and sending lip motion parameters to iwai's program
[facetrack format]
no
iwai
[facetrack host]
no
[facetrack port]
30012


[asr host]
no
localhost
[asr port]
5530
[asr format]
no
commu
no
julius

[process segment]
0
1

# socket for receiving start/stop recording commands from a sensor manager server 
[sensor manager host]
localhost

# port number of the sensor manager
# if set to -1, it starts recording without waiting for a sensor manager connection
[sensor manager port]
-1
4443

# sensor manager database name (2017.06.13)
[sensor manager database name]
test

# save configuration
# no: do not save
# wav: wav format
# raw: headerless format
[save audio format]
no
wav

# save processed output signal
[save output format]
no
wav

# directory for saving the audio files
# this directory has to be created manually
[save audio dir]
c:\carlos\data\recsound

# time interval (in ms) to split the audio files
# each 5 minutes (300000)
[save time interval ms]
300000
10000
-1
60000
300000

# save/compute parameters (feature extraction)
# 0 -> don't save, don't compute (default)
# 1 -> save, compute
# -1 -> don't save, compute
[save param]
-1
[save param dir]
d:\svtools\param\

# 2023.02.07
[save motion command]
1

# debug file
# 1 = SendMotion
# 2 = ReceiveAudioData
# 2 = captureaudio
# 12 = ReceiveAudioData12
# 3 = SaveAudioData
# 4 = SendAudioData
# 5 = SendAudioData2
# 5 = ReceiveAudioData2
# 6 = ReceiveAudioData (TEXTWAV)
# 7 = ReceiveASR
# 9 = ConnectPlayerServer
[debug]
0
12
0
1
12
0
4
0
12

[pos_x]
2200
[pos_y]
1200
[pos_z]
1200

[sensor id]
0
